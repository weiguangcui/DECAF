---
import { ClientRouter } from 'astro:transitions'
import '../styles/global.css'

export interface Props {
  title: string
  description: string
  permalink: string
}

const { title, description, permalink } = Astro.props
const socialUrl = Astro.site.href + 'assets/social.png'
const rawBASE = import.meta.env.BASE_URL || '/'
const BASE = rawBASE.endsWith('/') ? rawBASE : `${rawBASE}/`
const fontCSS = `
  :root {
    --base-url: '${BASE}';
  }
  @supports not (content: var(--dummy)) {
    /* no-op; ensure CSS var syntax parses */
  }
  /* Fallbacks are handled by using absolute "/DECAF/" in production config if needed */
  /* BASE resolved at build time: ${BASE} */

  /* Fonts (inlined to respect BASE without editing CSS files) */
  @font-face {
    font-family: 'Fira Sans';
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url('${BASE}assets/fonts/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2') format('woff2');
  }
  @font-face {
    font-family: 'Merriweather';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url('${BASE}assets/fonts/u-440qyriQwlOrhSvowK_l5-fCZMdeX3rg.woff2') format('woff2');
  }
  @font-face {
    font-family: 'Merriweather';
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url('${BASE}assets/fonts/u-4n0qyriQwlOrhSvowK_l52xwNZWMf6hPvhPQ.woff2') format('woff2');
  }
`
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={permalink} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialUrl} />

<ClientRouter />

<!-- Provide base path and inline @font-face using BASE -->
<style is:inline set:html={fontCSS} />

<!-- This is intentionally inlined to avoid FOUC -->
<script is:inline>
  const root = document.documentElement
  const theme = localStorage.getItem('theme')
  if (
    theme === 'dark' ||
    (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    root.classList.add('theme-dark')
  } else {
    root.classList.remove('theme-dark')
  }
</script>
